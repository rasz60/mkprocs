{"version":3,"file":"static/js/796.d914ebd0.chunk.js","mappings":"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","sources":["components/product/ProductForm.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProductForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [factories, setFactories] = useState(null);\r\n  //const [platforms, setPlatforms] = useState(null);\r\n  //const [colors, setProductColors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    factoryList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selectFc = document.querySelector(\"#pdFcNum\");\r\n\r\n    selectFc.innerHTML = \"\";\r\n\r\n    const optionEle = document.createElement(\"option\");\r\n    optionEle.value = \"\";\r\n    optionEle.textContent = \"제조사를 선택해주세요.\";\r\n    selectFc.appendChild(optionEle);\r\n\r\n    if (factories != null) {\r\n      for (var i = 0; i < factories.length; i++) {\r\n        const optionEle = document.createElement(\"option\");\r\n        optionEle.value = factories[i].fcNum;\r\n        optionEle.textContent = factories[i].fcName;\r\n        selectFc.appendChild(optionEle);\r\n      }\r\n    }\r\n  }, [factories]);\r\n\r\n  const factoryList = async () => {\r\n    let url = \"/rest/fc/list\";\r\n    let res = await fetch(url);\r\n    let resJson = await res.json();\r\n\r\n    let fcList = resJson.result.fcList;\r\n\r\n    if (fcList != null) {\r\n      setFactories(fcList);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fnSave = async () => {\r\n    let url = \"/rest/pd/create\";\r\n    let res = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        pdName: document.querySelector(\"#pdName\").value,\r\n        pdCategory: document.querySelector(\"#pdCategory\").value,\r\n        pdPrice: document.querySelector(\"#pdPrice\").value,\r\n        pdFcNum: document.querySelector(\"#pdFcNum\").value,\r\n        pdColorNum: document.querySelector(\"#pdColorNum\").vaule,\r\n      }),\r\n    });\r\n\r\n    let data = await res.json();\r\n\r\n    if (data.resultCode === 200) {\r\n      alert(data.resultMessage);\r\n      navigate(\"/admin/product/list\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    console.log(form.checkValidity());\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      event.preventDefault();\r\n      fnSave();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Form.Group className=\"form-box\">\r\n          <Form.Label htmlFor=\"pdName\">Product Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"pdName\"\r\n            aria-describedby=\"pdNameDesc\"\r\n            required\r\n          />\r\n          <Form.Text id=\"pdNameDesc\" muted>\r\n            등록할 상품 이름을 입력해주세요.\r\n          </Form.Text>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            상품 이름을 입력해주세요.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Row>\r\n      <Row>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"pdFcNum\">Factory</Form.Label>\r\n            <Form.Select id=\"pdFcNum\" aria-describedby=\"pdFcNumDesc\" required>\r\n              <option value=\"\">선택해주세요.</option>\r\n            </Form.Select>\r\n            <Form.Text id=\"pdFcNumDesc\" muted>\r\n              제조사를 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"pdCategory\">Category</Form.Label>\r\n            <Form.Select id=\"pdCategory\" aria-describedby=\"pdCategoryDesc\" />\r\n            <Form.Text id=\"pdCategoryDesc\" muted>\r\n              상품 카테고리을 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"pdColorNum\">Color</Form.Label>\r\n            <Form.Select id=\"pdColorNum\" aria-describedby=\"pdColorNumDesc\" />\r\n            <Form.Text id=\"pdColorNumDesc\" muted>\r\n              색상을 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"pdPrice\">Price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              id=\"pdPrice\"\r\n              aria-describedby=\"pdPriceDesc\"\r\n              min=\"1000\"\r\n              required\r\n            />\r\n            <Form.Text id=\"pdPriceDesc\" muted>\r\n              상품 가격을 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3\">\r\n        <Col md className=\"d-flex justify-content-end\">\r\n          <Button className=\"btn-primary\" type=\"submit\">\r\n            등록\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["ProductForm","validated","setValidated","useState","factories","setFactories","useEffect","factoryList","selectFc","document","querySelector","innerHTML","optionEle","createElement","value","textContent","appendChild","i","length","fcNum","fcName","async","res","fetch","fcList","json","result","navigate","useNavigate","_jsxs","Form","noValidate","onSubmit","event","form","currentTarget","console","log","checkValidity","preventDefault","stopPropagation","method","headers","body","JSON","stringify","pdName","pdCategory","pdPrice","pdFcNum","pdColorNum","vaule","data","resultCode","alert","resultMessage","fnSave","children","_jsx","Row","Group","className","Label","htmlFor","Control","type","id","required","Text","muted","Feedback","Col","md","Select","min","Button","React","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName"],"sourceRoot":""}