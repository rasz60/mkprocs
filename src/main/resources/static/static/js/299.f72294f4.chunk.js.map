{"version":3,"file":"static/js/299.f72294f4.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Row.js","components/platform/PlatformForm.jsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PlatformForm = () => {\r\n  const [validated, setValidated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fnSave = async () => {\r\n    let url = \"/rest/pf/create\";\r\n    let res = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        pfName: document.querySelector(\"#pfName\").value,\r\n        pfStartDate: new Date(document.querySelector(\"#pfStartDate\").value),\r\n        pfEndDate: new Date(document.querySelector(\"#pfEndDate\").value),\r\n      }),\r\n    });\r\n\r\n    let data = await res.json();\r\n\r\n    if (data.resultCode === 200) {\r\n      alert(data.resultMessage);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    console.log(form.checkValidity());\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      console.log(\"?\");\r\n      event.preventDefault();\r\n      fnSave();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Form.Group className=\"form-box\">\r\n          <Form.Label htmlFor=\"pfName\">Platform Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"pfName\"\r\n            aria-describedby=\"pfNameDesc\"\r\n            required\r\n          />\r\n          <Form.Text id=\"pfNameDesc\" muted>\r\n            등록할 플랫폼 이름을 입력해주세요.\r\n          </Form.Text>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            플랫폼 이름을 입력해주세요.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Row>\r\n      <Row>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"pfStartDate\">Start Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              id=\"pfStartDate\"\r\n              aria-describedby=\"pfStartDateDesc\"\r\n              required\r\n            />\r\n            <Form.Text id=\"pfStartDateDesc\" muted>\r\n              시작일을 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n        <Col md>\r\n          <Form.Group className=\"form-box\">\r\n            <Form.Label htmlFor=\"platformEndDate\">End Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              id=\"pfEndDate\"\r\n              aria-describedby=\"endDateDesc\"\r\n              required\r\n            />\r\n            <Form.Text id=\"endDateDesc\" muted>\r\n              종료일을 입력해주세요.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-3\">\r\n        <Col md className=\"d-flex justify-content-end\">\r\n          <Button className=\"btn-primary\" type=\"submit\">\r\n            등록\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PlatformForm;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"names":["Row","React","_ref","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","_jsx","classNames","displayName","PlatformForm","validated","setValidated","useState","navigate","useNavigate","_jsxs","Form","noValidate","onSubmit","event","form","currentTarget","console","log","checkValidity","preventDefault","stopPropagation","async","res","fetch","method","headers","body","JSON","stringify","pfName","document","querySelector","value","pfStartDate","Date","pfEndDate","data","json","resultCode","alert","resultMessage","fnSave","children","Group","Label","htmlFor","Control","type","id","required","Text","muted","Feedback","Col","md","Button","colProps","spans","span","offset","order","useCol","length","propTypes","PropTypes","tooltip","FormCheckInput","isValid","isInvalid","controlId","useContext","FormContext","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","_Fragment","Object","assign","Input","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","Switch","FloatingLabel","Floating","Check","Range","Select"],"sourceRoot":""}